---
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-infra-kccm-rbac
  namespace: default
  annotations:
    projectsveltos.io/template: "true"
data:
  deployment.yaml: |
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: "{{ .Cluster.metadata.name }}-cloud-controller-manager"
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: "{{ .Cluster.metadata.name }}-kccm"
      namespace: default
    rules:
    - apiGroups:
      - kubevirt.io
      resources:
      - virtualmachines
      verbs:
      - get
      - watch
      - list
    - apiGroups:
      - kubevirt.io
      resources:
      - virtualmachineinstances
      verbs:
      - get
      - watch
      - list
      - update
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - services
      verbs:
      - '*'
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: "{{ .Cluster.metadata.name }}-kccm-sa"
      namespace: default
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: "{{ .Cluster.metadata.name }}-kccm"
    subjects:
    - kind: ServiceAccount
      name: "{{ .Cluster.metadata.name }}-cloud-controller-manager"
      namespace: default
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "{{ .Cluster.metadata.name }}-cloud-controller-manager"
      namespace: "{{ .Cluster.metadata.namespace }}"
      annotations:
        kubernetes.io/service-account.name: "{{ .Cluster.metadata.name }}-cloud-controller-manager"
    type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-tenant-kccm-rbac
  namespace: default
  annotations:
    projectsveltos.io/template: "true"
data:
  deployment.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: cloud-controller-manager
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: "cloud-controller-manager"
    rules:
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - get
      - create
      - update
    - apiGroups:
      - ""
      resources:
      - services/status
      - services
      - events
      verbs:
      - '*'
    - apiGroups:
      - ""
      resources:
      - nodes
      verbs:
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name:  "cloud-controller-manager"
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: "cloud-controller-manager"
    subjects:
    - kind: ServiceAccount
      name: "cloud-controller-manager"
      namespace: kube-system
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cloud-config
      namespace: kube-system
    data:
      cloud-config: |
        loadBalancer:
          creationPollInterval: 5
          creationPollTimeout: 60
        kubeconfig: /etc/kubernetes/kubeconfig/mgmt-kubeconfig
        instancesV2:
          enabled: true
          zoneAndRegionEnabled: false
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        k8s-app: kubevirt-cloud-controller-manager
      name: kubevirt-cloud-controller-manager
      namespace: kube-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          k8s-app: kubevirt-cloud-controller-manager
      template:
        metadata:
          labels:
            k8s-app: kubevirt-cloud-controller-manager
        spec:
          containers:
          - args:
            - --cloud-provider=kubevirt
            - --cloud-config=/etc/cloud/cloud-config
            #- --kubeconfig=/etc/kubernetes/kubeconfig/mgmt-kubeconfig
            - --authentication-skip-lookup=true
            - --cluster-name={{ .Cluster.metadata.name }}
            #- --use-service-account-credentials
            command:
            - /bin/kubevirt-cloud-controller-manager
            image: quay.io/kubevirt/kubevirt-cloud-controller-manager:v0.5.1
            imagePullPolicy: Always
            name: kubevirt-cloud-controller-manager
            resources:
              requests:
                cpu: 100m
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /etc/kubernetes/kubeconfig
              name: kubeconfig
              readOnly: true
            - mountPath: /etc/cloud
              name: cloud-config
              readOnly: true
          nodeSelector:
            node-role.kubernetes.io/control-plane: ""
          serviceAccountName: cloud-controller-manager
          tolerations:
          - effect: NoSchedule
            key: node.cloudprovider.kubernetes.io/uninitialized
            value: "true"
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
          volumes:
          - configMap:
              name: cloud-config
            name: cloud-config
          - name: kubeconfig
            secret:
              secretName: kccm-kubeconfig-external

---
# BUG https://github.com/projectsveltos/addon-controller/issues/465
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-tenant-kccm-kubeconfig
  namespace: default
  annotations:
    projectsveltos.io/template: "true"
data:
  default.yaml: |
    apiVersion: v1
    kind: Secret
    metadata:
      name: kccm-kubeconfig-external
      namespace: kube-system
    stringData: 
      mgmt-kubeconfig: |
        apiVersion: v1
        kind: Config
        clusters:
        - name: managment-cluster
          cluster:
            certificate-authority-data: {{ $data:=(index .MgtmResources  "kccm").data }} {{ (index $data "ca.crt") }}
            server: "https://${MASTER_PUBLIC_IP}:6443"
        contexts:
        - name: managment-cluster
          context:
            cluster: managment-cluster
            user: managment-cluster
        current-context: managment-cluster
        users:
        - name: managment-cluster
          user:
            token: {{ (index .MgtmResources  "kccm").data.token | b64dec }}